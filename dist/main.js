!function(){"use strict";var e="prairie",t="desert",s="arctic",a="mountain";class i{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"generic";if(this.level=e,this.attack=0,this.defence=0,this.health=50,this.type=t,"Character"===new.target.name)throw new Error('Нельзя создать класс "Character"')}}class n extends i{constructor(e){super(e,"bowman"),this.attack=25,this.defence=25}}class r extends i{constructor(e){super(e,"swordsman"),this.attack=40,this.defence=10}}class l extends i{constructor(e){super(e,"magician"),this.attack=10,this.defence=40}}class c extends i{constructor(e){super(e,"undead"),this.attack=40,this.defence=10}}class o extends i{constructor(e){super(e,"daemon"),this.attack=10,this.defence=10}}class h extends i{constructor(e){super(e,"vampire"),this.attack=25,this.defence=25}}class d{constructor(e){this.characters=e}}function*m(e,t){const s=e[Math.floor(Math.random()*e.length)],a=Math.floor(Math.random()*t)+1;"bowman"===s&&(yield new n(a)),"swordsman"===s&&(yield new r(a)),"magician"===s&&(yield new l(a)),"undead"===s&&(yield new c(a)),"daemon"===s&&(yield new o(a)),"vampire"===s&&(yield new h(a))}function u(e,t,s){const a=[];for(let i=0;i<s;i++)a.push(m(e,t).next().value);return new d(a)}function p(e,t,s){let a=0;const i=[];"player"===e&&(a=0),"computer"===e&&(a=s-2);for(let e=0;e<s;e++){let n=e*s+a,r=e*s+a+1;t.includes(n)||i.push(n),t.includes(r)||i.push(r)}return i[Math.floor(Math.random()*i.length)]}class v{constructor(e,t){if(!(e instanceof i))throw new Error("character must be instance of Character or its children");if("number"!=typeof t)throw new Error("position must be a number");this.character=e,this.position=t}}const L=new class{constructor(){this.boardSize=8,this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.newGameListeners=[],this.saveGameListeners=[],this.loadGameListeners=[]}bindToDOM(e){if(!(e instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=e}drawUi(e){this.checkBinding(),this.container.innerHTML='\n      <div class="controls">\n        <button data-id="action-restart" class="btn">New Game</button>\n        <button data-id="action-save" class="btn">Save Game</button>\n        <button data-id="action-load" class="btn">Load Game</button>\n      </div>\n      <div class="board-container">\n        <div data-id="board" class="board"></div>\n      </div>\n    ',this.newGameEl=this.container.querySelector("[data-id=action-restart]"),this.saveGameEl=this.container.querySelector("[data-id=action-save]"),this.loadGameEl=this.container.querySelector("[data-id=action-load]"),this.newGameEl.addEventListener("click",(e=>this.onNewGameClick(e))),this.saveGameEl.addEventListener("click",(e=>this.onSaveGameClick(e))),this.loadGameEl.addEventListener("click",(e=>this.onLoadGameClick(e))),this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(e);for(let e=0;e<this.boardSize**2;e+=1){const a=document.createElement("div");a.classList.add("cell","map-tile","map-tile-"+(t=e,s=this.boardSize,0===t?"top-left":t===s-1?"top-right":t<s-1&&t>0?"top":t===s*s-s?"bottom-left":t===s*s-1?"bottom-right":t<s*s-1&&t>s*s-s?"bottom":t%s==0?"left":(t+1)%s==0?"right":"center")),a.addEventListener("mouseenter",(e=>this.onCellEnter(e))),a.addEventListener("mouseleave",(e=>this.onCellLeave(e))),a.addEventListener("click",(e=>this.onCellClick(e))),this.boardEl.appendChild(a)}var t,s;this.cells=Array.from(this.boardEl.children)}redrawPositions(e){for(const e of this.cells)e.innerHTML="";for(const s of e){const e=this.boardEl.children[s.position],a=document.createElement("div");a.classList.add("character",s.character.type);const i=document.createElement("div");i.classList.add("health-level");const n=document.createElement("div");n.classList.add("health-level-indicator","health-level-indicator-"+((t=s.character.health)<15?"critical":t<50?"normal":"high")),n.style.width=`${s.character.health}%`,i.appendChild(n),a.appendChild(i),e.appendChild(a)}var t}addCellEnterListener(e){this.cellEnterListeners.push(e)}addCellLeaveListener(e){this.cellLeaveListeners.push(e)}addCellClickListener(e){this.cellClickListeners.push(e)}addNewGameListener(e){this.newGameListeners.push(e)}addSaveGameListener(e){this.saveGameListeners.push(e)}addLoadGameListener(e){this.loadGameListeners.push(e)}onCellEnter(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellEnterListeners.forEach((e=>e.call(null,t)))}onCellLeave(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellLeaveListeners.forEach((e=>e.call(null,t)))}onCellClick(e){const t=this.cells.indexOf(e.currentTarget);this.cellClickListeners.forEach((e=>e.call(null,t)))}onNewGameClick(e){e.preventDefault(),this.newGameListeners.forEach((e=>e.call(null)))}onSaveGameClick(e){e.preventDefault(),this.saveGameListeners.forEach((e=>e.call(null)))}onLoadGameClick(e){e.preventDefault(),this.loadGameListeners.forEach((e=>e.call(null)))}static showError(e){alert(e)}static showMessage(e){alert(e)}selectCell(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"yellow";this.deselectCell(e),this.cells[e].classList.add("selected",`selected-${t}`)}deselectCell(e){const t=this.cells[e];t.classList.remove(...Array.from(t.classList).filter((e=>e.startsWith("selected"))))}showCellTooltip(e,t){this.cells[t].title=e}hideCellTooltip(e){this.cells[e].title=""}showDamage(e,t){return new Promise((s=>{const a=this.cells[e],i=document.createElement("span");i.textContent=t,i.classList.add("damage"),a.appendChild(i),i.addEventListener("animationend",(()=>{a.removeChild(i),s()}))}))}setCursor(e){this.boardEl.style.cursor=e}checkBinding(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}};L.bindToDOM(document.querySelector("#game-container"));const w=new class{constructor(e){this.storage=e}save(e){this.storage.setItem("state",JSON.stringify(e))}load(){try{return JSON.parse(this.storage.getItem("state"))}catch(e){throw new Error("Invalid state")}}}(localStorage),f=new class{constructor(e,t){this.boardSize=8,this.gamePlay=e,this.stateService=t,this.characterList=[]}init(){this.startNewGame()}onCellClick(e){}onCellEnter(e){}onCellLeave(e){}startNewGame(){this.fieldRendering(1),this.generateNewTeam("player"),this.generateNewTeam("computer"),this.positionTeam("player"),this.positionTeam("computer"),this.drawingCharacters()}fieldRendering(i){let n="";1===i&&(n=e),2===i&&(n=t),3===i&&(n=s),4===i&&(n=a),this.gamePlay.drawUi(n)}generateNewTeam(e){"player"===e&&(this.playerTeam=u(["Bowman","Swordsman","Magician"],1,3)),"computer"===e&&(this.computerTeam=u(["Vampire","Undead","Daemon"],1,3))}positionTeam(e){let t;const s=[];"player"===e&&(t=this.playerTeam.characters),"computer"===e&&(t=this.computerTeam.characters);for(let a of t){const t=p(e,s,this.boardSize);s.push(t);const i=new v(a,t);this.characterList.push(i)}}drawingCharacters(){this.gamePlay.redrawPositions(this.characterList)}}(L,w);f.init()}();